#!/usr/bin/env bash

# Copyright 2022 Korandoru Contributors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# shellcheck disable=SC2164

BINDIR=$(dirname "$0")
DRYAD_HOME=$(cd -P "$BINDIR"/..;pwd)
export DRYAD_HOME

# Check for the java to use
if [[ -z $JAVA_HOME ]]; then
    JAVA=$(which java)
    if [ $? != 0 ]; then
        echo "Error: JAVA_HOME not set, and no java executable found in $PATH." 1>&2
        exit 1
    fi
else
    JAVA=$JAVA_HOME/bin/java
fi

add_maven_deps_to_classpath() {
    MVN="mvn"
    if [ "$MAVEN_HOME" != "" ]; then
	    MVN=${MAVEN_HOME}/bin/mvn
    fi

    # Need to generate classpath from maven pom. This is costly so generate it
    # and cache it. Save the file into our target dir so a mvn clean will get
    # clean it up and force us create a new one.
    f="${DRYAD_HOME}/distribution/target/classpath.txt"
    if [ ! -f "${f}" ]
    then
    (
      cd "${DRYAD_HOME}"
      ${MVN} -pl distribution generate-sources &> /dev/null
    )
    fi
    DRYAD_CLASSPATH=${CLASSPATH}:$(cat "${f}")
}

if [ -d "$DRYAD_HOME/lib" ]; then
	  DRYAD_CLASSPATH="$DRYAD_CLASSPATH:$DRYAD_HOME/lib/*"
else
    add_maven_deps_to_classpath
fi

OPTS="-cp $DRYAD_CLASSPATH $OPTS"
cd "$DRYAD_HOME_HOME"

# shellcheck disable=SC2086
exec "$JAVA" $OPTS io.korandoru.dryad.command.DryadMain "$@"
