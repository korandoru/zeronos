plugins {
    id 'idea'
    id 'java'
    id 'java-library'
    id 'com.adarshr.test-logger' version '3.2.0'
    id 'com.diffplug.spotless' version '6.8.0'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.google.protobuf' version '0.8.18'
    id 'nebula.dependency-recommender' version '9.0.2'
}

dependencyRecommendations {
    propertiesFile file: file('versions.props')
}

allprojects {
    apply plugin: 'com.diffplug.spotless'

    group 'io.korandoru.dryad'
    version '0.1-SNAPSHOT'

    repositories {
        mavenCentral()
        mavenLocal()
    }

    spotless {
        format 'misc', {
            target '*.gradle', '*.md', '.gitignore'

            trimTrailingWhitespace()
            indentWithSpaces(4)
            endWithNewline()
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'com.adarshr.test-logger'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'com.google.protobuf'
    apply plugin: 'nebula.dependency-recommender'

    sourceCompatibility = 17
    targetCompatibility = 17

    spotless {
        java {
            importOrder('', 'static ')
            removeUnusedImports()
            trimTrailingWhitespace()
            indentWithSpaces(4)
            endWithNewline()
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'

        implementation 'com.google.guava:guava'
        implementation 'org.slf4j:slf4j-api'
        implementation 'org.slf4j:slf4j-simple'
    }
}

project('dryad-proto') {
    apply plugin: 'com.github.johnrengelman.shadow'

    dependencies {
        implementation 'com.google.protobuf:protobuf-java'
        implementation 'org.apache.ratis:ratis-thirdparty-misc'
        protobuf files("proto/")
    }

    protobuf {
        protoc {
            artifact = 'com.google.protobuf:protoc'
        }
    }

    shadowJar {
        configurations = []
        relocate 'com.google.protobuf', 'org.apache.ratis.thirdparty.com.google.protobuf'
    }
}

project('dryad-server') {
    dependencies {
        implementation project(':dryad-config')
        implementation project(path: ':dryad-proto', configuration: 'shadow')
        implementation 'org.apache.ratis:ratis-server'
        implementation 'org.apache.ratis:ratis-grpc'
    }
}

project('dryad-client') {
    dependencies {
        implementation project(path: ':dryad-proto', configuration: 'shadow')
        implementation 'org.apache.ratis:ratis-server'
        implementation 'org.apache.ratis:ratis-grpc'
    }
}

project('dryad-config') {
    dependencies {
        implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-toml'
        implementation 'com.jayway.jsonpath:json-path'
    }
}

project('dryad-ctl') {
    apply plugin: 'application'
    // this line must go ahead of applying shadow plugin
    mainClassName = 'io.korandoru.dryad.ctl.DryadMain'

    apply plugin: 'com.github.johnrengelman.shadow'

    dependencies {
        implementation project(':dryad-server')
        implementation project(':dryad-config')
        implementation 'info.picocli:picocli'
    }

    run {
        standardInput = System.in
    }
}
